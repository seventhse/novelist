/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorkspaceRouteImport } from './routes/_workspace/route'
import { Route as WorkspaceIndexImport } from './routes/_workspace/index'
import { Route as WorkspaceCharactersUpdateIdImport } from './routes/_workspace/characters/update.$id'

// Create Virtual Routes

const WorkspaceRealmsLazyImport = createFileRoute('/_workspace/realms')()
const WorkspaceHelpLazyImport = createFileRoute('/_workspace/help')()
const WorkspaceCollectionsLazyImport = createFileRoute(
  '/_workspace/collections',
)()
const WorkspaceAskAiLazyImport = createFileRoute('/_workspace/ask-ai')()
const authRegisterLazyImport = createFileRoute('/(auth)/register')()
const authLoginLazyImport = createFileRoute('/(auth)/login')()
const WorkspaceCharactersIndexLazyImport = createFileRoute(
  '/_workspace/characters/',
)()
const WorkspaceCharactersCreateLazyImport = createFileRoute(
  '/_workspace/characters/create',
)()
const WorkspaceCharactersDetailIdLazyImport = createFileRoute(
  '/_workspace/characters/detail/$id',
)()

// Create/Update Routes

const WorkspaceRouteRoute = WorkspaceRouteImport.update({
  id: '/_workspace',
  getParentRoute: () => rootRoute,
} as any)

const WorkspaceIndexRoute = WorkspaceIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WorkspaceRouteRoute,
} as any)

const WorkspaceRealmsLazyRoute = WorkspaceRealmsLazyImport.update({
  id: '/realms',
  path: '/realms',
  getParentRoute: () => WorkspaceRouteRoute,
} as any).lazy(() =>
  import('./routes/_workspace/realms.lazy').then((d) => d.Route),
)

const WorkspaceHelpLazyRoute = WorkspaceHelpLazyImport.update({
  id: '/help',
  path: '/help',
  getParentRoute: () => WorkspaceRouteRoute,
} as any).lazy(() =>
  import('./routes/_workspace/help.lazy').then((d) => d.Route),
)

const WorkspaceCollectionsLazyRoute = WorkspaceCollectionsLazyImport.update({
  id: '/collections',
  path: '/collections',
  getParentRoute: () => WorkspaceRouteRoute,
} as any).lazy(() =>
  import('./routes/_workspace/collections.lazy').then((d) => d.Route),
)

const WorkspaceAskAiLazyRoute = WorkspaceAskAiLazyImport.update({
  id: '/ask-ai',
  path: '/ask-ai',
  getParentRoute: () => WorkspaceRouteRoute,
} as any).lazy(() =>
  import('./routes/_workspace/ask-ai.lazy').then((d) => d.Route),
)

const authRegisterLazyRoute = authRegisterLazyImport
  .update({
    id: '/(auth)/register',
    path: '/register',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/register.lazy').then((d) => d.Route))

const authLoginLazyRoute = authLoginLazyImport
  .update({
    id: '/(auth)/login',
    path: '/login',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/login.lazy').then((d) => d.Route))

const WorkspaceCharactersIndexLazyRoute =
  WorkspaceCharactersIndexLazyImport.update({
    id: '/characters/',
    path: '/characters/',
    getParentRoute: () => WorkspaceRouteRoute,
  } as any).lazy(() =>
    import('./routes/_workspace/characters/index.lazy').then((d) => d.Route),
  )

const WorkspaceCharactersCreateLazyRoute =
  WorkspaceCharactersCreateLazyImport.update({
    id: '/characters/create',
    path: '/characters/create',
    getParentRoute: () => WorkspaceRouteRoute,
  } as any).lazy(() =>
    import('./routes/_workspace/characters/create.lazy').then((d) => d.Route),
  )

const WorkspaceCharactersDetailIdLazyRoute =
  WorkspaceCharactersDetailIdLazyImport.update({
    id: '/characters/detail/$id',
    path: '/characters/detail/$id',
    getParentRoute: () => WorkspaceRouteRoute,
  } as any).lazy(() =>
    import('./routes/_workspace/characters/detail.$id.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkspaceCharactersUpdateIdRoute =
  WorkspaceCharactersUpdateIdImport.update({
    id: '/characters/update/$id',
    path: '/characters/update/$id',
    getParentRoute: () => WorkspaceRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_workspace': {
      id: '/_workspace'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WorkspaceRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/_workspace/ask-ai': {
      id: '/_workspace/ask-ai'
      path: '/ask-ai'
      fullPath: '/ask-ai'
      preLoaderRoute: typeof WorkspaceAskAiLazyImport
      parentRoute: typeof WorkspaceRouteImport
    }
    '/_workspace/collections': {
      id: '/_workspace/collections'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof WorkspaceCollectionsLazyImport
      parentRoute: typeof WorkspaceRouteImport
    }
    '/_workspace/help': {
      id: '/_workspace/help'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof WorkspaceHelpLazyImport
      parentRoute: typeof WorkspaceRouteImport
    }
    '/_workspace/realms': {
      id: '/_workspace/realms'
      path: '/realms'
      fullPath: '/realms'
      preLoaderRoute: typeof WorkspaceRealmsLazyImport
      parentRoute: typeof WorkspaceRouteImport
    }
    '/_workspace/': {
      id: '/_workspace/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof WorkspaceIndexImport
      parentRoute: typeof WorkspaceRouteImport
    }
    '/_workspace/characters/create': {
      id: '/_workspace/characters/create'
      path: '/characters/create'
      fullPath: '/characters/create'
      preLoaderRoute: typeof WorkspaceCharactersCreateLazyImport
      parentRoute: typeof WorkspaceRouteImport
    }
    '/_workspace/characters/': {
      id: '/_workspace/characters/'
      path: '/characters'
      fullPath: '/characters'
      preLoaderRoute: typeof WorkspaceCharactersIndexLazyImport
      parentRoute: typeof WorkspaceRouteImport
    }
    '/_workspace/characters/update/$id': {
      id: '/_workspace/characters/update/$id'
      path: '/characters/update/$id'
      fullPath: '/characters/update/$id'
      preLoaderRoute: typeof WorkspaceCharactersUpdateIdImport
      parentRoute: typeof WorkspaceRouteImport
    }
    '/_workspace/characters/detail/$id': {
      id: '/_workspace/characters/detail/$id'
      path: '/characters/detail/$id'
      fullPath: '/characters/detail/$id'
      preLoaderRoute: typeof WorkspaceCharactersDetailIdLazyImport
      parentRoute: typeof WorkspaceRouteImport
    }
  }
}

// Create and export the route tree

interface WorkspaceRouteRouteChildren {
  WorkspaceAskAiLazyRoute: typeof WorkspaceAskAiLazyRoute
  WorkspaceCollectionsLazyRoute: typeof WorkspaceCollectionsLazyRoute
  WorkspaceHelpLazyRoute: typeof WorkspaceHelpLazyRoute
  WorkspaceRealmsLazyRoute: typeof WorkspaceRealmsLazyRoute
  WorkspaceIndexRoute: typeof WorkspaceIndexRoute
  WorkspaceCharactersCreateLazyRoute: typeof WorkspaceCharactersCreateLazyRoute
  WorkspaceCharactersIndexLazyRoute: typeof WorkspaceCharactersIndexLazyRoute
  WorkspaceCharactersUpdateIdRoute: typeof WorkspaceCharactersUpdateIdRoute
  WorkspaceCharactersDetailIdLazyRoute: typeof WorkspaceCharactersDetailIdLazyRoute
}

const WorkspaceRouteRouteChildren: WorkspaceRouteRouteChildren = {
  WorkspaceAskAiLazyRoute: WorkspaceAskAiLazyRoute,
  WorkspaceCollectionsLazyRoute: WorkspaceCollectionsLazyRoute,
  WorkspaceHelpLazyRoute: WorkspaceHelpLazyRoute,
  WorkspaceRealmsLazyRoute: WorkspaceRealmsLazyRoute,
  WorkspaceIndexRoute: WorkspaceIndexRoute,
  WorkspaceCharactersCreateLazyRoute: WorkspaceCharactersCreateLazyRoute,
  WorkspaceCharactersIndexLazyRoute: WorkspaceCharactersIndexLazyRoute,
  WorkspaceCharactersUpdateIdRoute: WorkspaceCharactersUpdateIdRoute,
  WorkspaceCharactersDetailIdLazyRoute: WorkspaceCharactersDetailIdLazyRoute,
}

const WorkspaceRouteRouteWithChildren = WorkspaceRouteRoute._addFileChildren(
  WorkspaceRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof WorkspaceRouteRouteWithChildren
  '/login': typeof authLoginLazyRoute
  '/register': typeof authRegisterLazyRoute
  '/ask-ai': typeof WorkspaceAskAiLazyRoute
  '/collections': typeof WorkspaceCollectionsLazyRoute
  '/help': typeof WorkspaceHelpLazyRoute
  '/realms': typeof WorkspaceRealmsLazyRoute
  '/': typeof WorkspaceIndexRoute
  '/characters/create': typeof WorkspaceCharactersCreateLazyRoute
  '/characters': typeof WorkspaceCharactersIndexLazyRoute
  '/characters/update/$id': typeof WorkspaceCharactersUpdateIdRoute
  '/characters/detail/$id': typeof WorkspaceCharactersDetailIdLazyRoute
}

export interface FileRoutesByTo {
  '/login': typeof authLoginLazyRoute
  '/register': typeof authRegisterLazyRoute
  '/ask-ai': typeof WorkspaceAskAiLazyRoute
  '/collections': typeof WorkspaceCollectionsLazyRoute
  '/help': typeof WorkspaceHelpLazyRoute
  '/realms': typeof WorkspaceRealmsLazyRoute
  '/': typeof WorkspaceIndexRoute
  '/characters/create': typeof WorkspaceCharactersCreateLazyRoute
  '/characters': typeof WorkspaceCharactersIndexLazyRoute
  '/characters/update/$id': typeof WorkspaceCharactersUpdateIdRoute
  '/characters/detail/$id': typeof WorkspaceCharactersDetailIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_workspace': typeof WorkspaceRouteRouteWithChildren
  '/(auth)/login': typeof authLoginLazyRoute
  '/(auth)/register': typeof authRegisterLazyRoute
  '/_workspace/ask-ai': typeof WorkspaceAskAiLazyRoute
  '/_workspace/collections': typeof WorkspaceCollectionsLazyRoute
  '/_workspace/help': typeof WorkspaceHelpLazyRoute
  '/_workspace/realms': typeof WorkspaceRealmsLazyRoute
  '/_workspace/': typeof WorkspaceIndexRoute
  '/_workspace/characters/create': typeof WorkspaceCharactersCreateLazyRoute
  '/_workspace/characters/': typeof WorkspaceCharactersIndexLazyRoute
  '/_workspace/characters/update/$id': typeof WorkspaceCharactersUpdateIdRoute
  '/_workspace/characters/detail/$id': typeof WorkspaceCharactersDetailIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/register'
    | '/ask-ai'
    | '/collections'
    | '/help'
    | '/realms'
    | '/'
    | '/characters/create'
    | '/characters'
    | '/characters/update/$id'
    | '/characters/detail/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/register'
    | '/ask-ai'
    | '/collections'
    | '/help'
    | '/realms'
    | '/'
    | '/characters/create'
    | '/characters'
    | '/characters/update/$id'
    | '/characters/detail/$id'
  id:
    | '__root__'
    | '/_workspace'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/_workspace/ask-ai'
    | '/_workspace/collections'
    | '/_workspace/help'
    | '/_workspace/realms'
    | '/_workspace/'
    | '/_workspace/characters/create'
    | '/_workspace/characters/'
    | '/_workspace/characters/update/$id'
    | '/_workspace/characters/detail/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  WorkspaceRouteRoute: typeof WorkspaceRouteRouteWithChildren
  authLoginLazyRoute: typeof authLoginLazyRoute
  authRegisterLazyRoute: typeof authRegisterLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  WorkspaceRouteRoute: WorkspaceRouteRouteWithChildren,
  authLoginLazyRoute: authLoginLazyRoute,
  authRegisterLazyRoute: authRegisterLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_workspace",
        "/(auth)/login",
        "/(auth)/register"
      ]
    },
    "/_workspace": {
      "filePath": "_workspace/route.tsx",
      "children": [
        "/_workspace/ask-ai",
        "/_workspace/collections",
        "/_workspace/help",
        "/_workspace/realms",
        "/_workspace/",
        "/_workspace/characters/create",
        "/_workspace/characters/",
        "/_workspace/characters/update/$id",
        "/_workspace/characters/detail/$id"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.lazy.tsx"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.lazy.tsx"
    },
    "/_workspace/ask-ai": {
      "filePath": "_workspace/ask-ai.lazy.tsx",
      "parent": "/_workspace"
    },
    "/_workspace/collections": {
      "filePath": "_workspace/collections.lazy.tsx",
      "parent": "/_workspace"
    },
    "/_workspace/help": {
      "filePath": "_workspace/help.lazy.tsx",
      "parent": "/_workspace"
    },
    "/_workspace/realms": {
      "filePath": "_workspace/realms.lazy.tsx",
      "parent": "/_workspace"
    },
    "/_workspace/": {
      "filePath": "_workspace/index.tsx",
      "parent": "/_workspace"
    },
    "/_workspace/characters/create": {
      "filePath": "_workspace/characters/create.lazy.tsx",
      "parent": "/_workspace"
    },
    "/_workspace/characters/": {
      "filePath": "_workspace/characters/index.lazy.tsx",
      "parent": "/_workspace"
    },
    "/_workspace/characters/update/$id": {
      "filePath": "_workspace/characters/update.$id.tsx",
      "parent": "/_workspace"
    },
    "/_workspace/characters/detail/$id": {
      "filePath": "_workspace/characters/detail.$id.lazy.tsx",
      "parent": "/_workspace"
    }
  }
}
ROUTE_MANIFEST_END */
